//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0
// See https://eclipse-ee4j.github.io/jaxb-ri
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2022.07.10 at 04:24:59 PM IST
//


package com.fss.aeps.jaxb;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for deviceTagNameType.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="deviceTagNameType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="MOBILE"/&gt;
 *     &lt;enumeration value="GEOCODE"/&gt;
 *     &lt;enumeration value="LOCATION"/&gt;
 *     &lt;enumeration value="IP"/&gt;
 *     &lt;enumeration value="TYPE"/&gt;
 *     &lt;enumeration value="ID"/&gt;
 *     &lt;enumeration value="OS"/&gt;
 *     &lt;enumeration value="APP"/&gt;
 *     &lt;enumeration value="CAPABILITY"/&gt;
 *     &lt;enumeration value="TELECOM"/&gt;
 *     &lt;enumeration value="cardAccpTrId"/&gt;
 *     &lt;enumeration value="cardAccIdCode"/&gt;
 *     &lt;enumeration value="posEntryCode"/&gt;
 *     &lt;enumeration value="posServCdnCode"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 *
 */
@XmlType(name = "deviceTagNameType")
@XmlEnum
public enum DeviceTagNameType {

	@XmlEnumValue("PinCode")
	PIN_CODE("PinCode"),
	@XmlEnumValue("AgentId")
	AGENT_ID("AgentId"),

    MOBILE("MOBILE"),
    GEOCODE("GEOCODE"),
    LOCATION("LOCATION"),
    IP("IP"),
    TYPE("TYPE"),
    ID("ID"),
    OS("OS"),
    APP("APP"),
    CAPABILITY("CAPABILITY"),
    TELECOM("TELECOM"),
    @XmlEnumValue("cardAccpTrId")
    CARD_ACCP_TR_ID("cardAccpTrId"),
    @XmlEnumValue("cardAccIdCode")
    CARD_ACC_ID_CODE("cardAccIdCode"),
    @XmlEnumValue("posEntryCode")
    POS_ENTRY_CODE("posEntryCode"),
    @XmlEnumValue("posServCdnCode")
    POS_SERV_CDN_CODE("posServCdnCode");
    private final String value;

    DeviceTagNameType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DeviceTagNameType fromValue(String v) {
        for (DeviceTagNameType c: DeviceTagNameType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
